#!/bin/sh

num_cores=${num_cores:-2}
ram=${ram:-2G}
kernel=${kernel:-"$HOME/IMG/android/kernel"}
initrd=${initrd:-"$HOME/IMG/android/initrd.img"}
ramdisk=${ramdisk:-"$HOME/IMG/android/ramdisk.img"}
system=${system:-"$HOME/IMG/android/system.img"}
data=${data:-"$HOME/IMG/android/data.img"}
display=${display:-gtk}
serial=${serial:-stdio}
vga=${vga:-virtio}

kernel_cmd=$(cat <<END
nomodeset xforceversa
root=/dev/ram0
androidboot.selinux=permissive
console=ttyS0
RAMDISK=vdb
DATA=vdc
END
)

arch=`uname -m`
qemu="qemu-systemi-$arch"

die () {
   printf "$@" >&2
   exit 1
}

qemu_android_check () {
   command -v "$qemu" >/dev/null || die "Error: $qemu not found."

   lsmod | grep -q ^kvm || die "Error: kvm kernel module not found."

   num_re='\([1-9]\|[1-9][0-9]\)G$'
   expr "$num_core" : "$num_re" >/dev/null || die "Error: Invalid number of cores."

   test -f "$kernel"  || die "Error: kernel '$kernel' not found."
   test -f "$system"  || die "Error: system '$system' not found."
   test -f "$data"    || die "Error: data '$data' not found."
   test -f "$ramdisk" || die "Error: ramdisk '$ramdisk' not found."
   test -f "$initrd"  || die "Error: initrd '$initrd' not found."

   ram=$((${ram%G} * 1024))
}

drive_system () {
   args=$(cat <<END
index=0
if=virtio
id=system
file="$system"
format=raw
readonly=on
END
)
   printf "$args" | tr '\n' ','
}

drive_ramdisk () {
   args=$(cat <<END
index=1
if=virtio
id=ramdisk
file="$ramdisk"
format=raw
readonly=on
END
)
   printf "$args" | tr '\n' ','
}

drive_data () {
   args=$(cat <<END
index=2
if=virtio
id=data
file="$data"
format=raw
END
)
   printf "$args" | tr '\n' ','
}

qemu_android () {
   eval $qemu               \
      -enable-kvm            \
      -cpu host               \
      -machine vmport=off      \
      -m $ram                   \
      -smp cores=$num_cores      \
      -boot menu=on               \
      -vga $vga                    \
      -display $display             \
      -serial $serial                \
      -initrd "'$initrd'"             \
      -kernel "'$kernel'"              \
      -append "'$kernel_cmd'"           \
      -drive  "$(drive_system)"          \
      -drive  "$(drive_ramdisk)"          \
      -drive  "$(drive_data)"              \
      -netdev user,id=knet                  \
      -device virtio-net-pci,netdev=knet     \
      -k fr
}
