#!/bin/sh

die () {
   printf '%s: %s.\n' "$0" "$*"
   exit 1
}

requires () {
   for cmd in "$@" ; do
      command -v "$cmd" >/dev/null || die "$cmd: command not found"
   done
}

say () {
   printf '%s\n' "$*"
}

aremote () {

   test -z "${CODEBERG_TOKEN:-}" && die "CODEBERG_TOKEN: paramater is unset"
   test -z "${GITHUB_TOKEN:-}"   && die "GITHUB_TOKEN: paramater is unset"

   remotes=$(cat <<END
https://$CODEBERG_TOKEN@codeberg.org/tcheukueppo
https://$GITHUB_TOKEN@github.com/tcheukueppoo
END
)

   test -d ~/projects || return

   for file in ~/projects/* ; do
      stest -dxq "$file" || continue

      cd "$file"
      git_dir=$(git rev-parse --show-toplevel 2>/dev/null)

      test $? -ne 0 && continue
      test "$(readlink -f "$file")" = "$git_dir" || die "Unexpected error!"

      printf "on '%s'...\n" "$file"
      IFS='
'
      for r in $remotes ; do
         url="$r/$(basename "$file")"
         git push --set-upstream "$url"
      done

      cd - >/dev/null
   done
}

requires git stest
aremote
