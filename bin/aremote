#!/bin/sh

die () {
   printf '%s: %s.\n' "$0" "$*"
   exit 1
}

requires () {
   for cmd in "$@" ; do
      command -v "$cmd" >/dev/null || die "$cmd: command not found"
   done
}

say () {
   printf '%s\n' "$*"
}

aremote () {
   remotes=$(cat <<END
https://codeberg.org/tcheukueppo
https://github.com/tcheukueppo
END
   )

   test -d ~/projects || return

   for file in ~/projects/* ; do
      stest -dxq "$file" || continue

      cd "$file"
      git_dir=`git rev-parse --show-toplevel 2>/dev/null`

      test $? -ne 0 && continue
      test "$(readlink -f "$file")" = "$git_dir" || die "Unexpected error!"

      git remote | grep -q '^origin'
      test $? -ne 0 && continue

      url=`git remote get-url origin`
      url=${url%/}
      say "$remotes" | grep -qF "${url%/*}"
      test $? -ne 0 && continue

      printf "on '%s'...\n" "$file"
      IFS='
'
      for r in $remotes ; do
         name=${r#*://}
         name=${name%/*}
         url="$r/$(basename "$file")"

         git remote | grep -qxF "$name"

         test $? -eq 0 || git remote add "$name" "$url"
         git remote set-url "$name" "$url"
         git push "$name"
      done

      cd - >/dev/null
   done
}

requires git stest
aremote
